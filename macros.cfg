#####################################################################
# Macros
#####################################################################
  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

# Example SS start gcode
# PRINT_START EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] FILAMENT=[filament_type]
[gcode_macro PRINT_START]
gcode:
    SET_FAN_SPEED FAN=ZeroFilter SPEED=1.0 ; turn ZeroFilter fan on
    {% if printer.homed_axes != 'XYZ' %}
		G28			#Home All Axes if not already homed
	{% endif %}
    {% set EXTRUDER_WARM = params.EXTRUDER_WARM|default(170)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(235)|int %}
    {% set BED = params.BED|default(110)|int %}
    M82 # Extruder to Absolute mode
    G90 # Absolute positioning
    G0 Z10 F3000 # Lift Z
    M104 S{EXTRUDER_WARM} T0 # Set Extruder to Warm
    M190 S{BED} # Wait for Bed to Heatup
    M109 S{EXTRUDER} T0 # Wait for Extruder to Heatup
    G0 X120 Y120 F8000 # Move to the corner
    G0 Z0.15 F500 # Lower nozzle
    G92 E0 # reset extrusion distance
    G0 E10 F200 #  Extrude to prime nozzle
    G92 E0 # reset extrusion distance
    G0 X115 Y115 F200 # Move slowly to just over the corner
    G4 P2000 # Dwell for 2 seconds to form blob

# Example SS end gcode
# PRINT_END
[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    M104 S0                        ; Turn off Extruder
    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    M84                            ; Turn off steppers
    
    {% if printer.heater_bed.temperature > 60 %}
        M117 Start gradual bed cooling ({printer.heater_bed.temperature}C°).
        M117 reduce temp to ({printer.heater_bed.temperature - 5 }C°).
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=60
    {% else %}
        M117 No Gradual bed cooling necessary ({printer.heater_bed.temperature}C°).
        M107 ; turn off fan
        M140 S0 ; turn off bed
    	M117 Print Complete!
    {% endif %}

[delayed_gcode gradual_cooldown]
gcode:
    {% if printer.heater_bed.target > 40 %}
        M117 reduce temp to ({printer.heater_bed.target - 5 }C°).
        M140 S{ printer.heater_bed.target - 5 }
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=60
    {% else %}
        M117 Gradual bed cooling finished ({printer.heater_bed.temperature}C°).
    	M140 S0 ; turn off bed
        SET_FAN_SPEED FAN=ZeroFilter SPEED=0 ; turn ZeroFilter fan off
        SLEEP ; Turn off lights and such
    	M117 Print Complete!
    {% endif %}

[gcode_macro WARM]
gcode:
#    PSU_ON
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=105
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=170
    SET_PIXELSTICK1 VALUE=1
    SET_FAN_SPEED FAN=ZeroFilter SPEED=1.0 ; turn ZeroFilter fan on

[gcode_macro WAKE]
gcode:
  SET_PIXELSTICK1 VALUE=1

[gcode_macro SLEEP]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    SET_PIXELSTICK1 VALUE=0
    SET_FAN_SPEED FAN=ZeroFilter SPEED=0 ; turn ZeroFilter fan off

########
# Utilities
########

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SLEEP

[gcode_macro SHUTDOWN]
gcode:
    OFF                                               ; Shortcut to turn everything off (see above for this macro)
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

#[gcode_macro POWER_OFF_PRINTER]
#gcode:
#  {action_call_remote_method("set_device_power", device="printer_led", state="off")}
#  {action_call_remote_method("set_device_power", device="printer", state="off")}

#[delayed_gcode delayed_printer_off]
#  initial_duration: 300. gcode: {% if printer.extruder.target >= 50 or printer.extruder.temperature >= 50 or printer.heater_bed.temperature >= 50 or printer.idle_timeout.state == "Printing" %}
#  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=300{% else %} POWER_OFF_PRINTER {% endif %}

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

